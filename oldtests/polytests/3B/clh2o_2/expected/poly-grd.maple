
    p[1] := x17*x19+x16*x18+x16*x19+x17*x18:
    p[2] := x12*x19+x14*x17+x13*x16+x11*x18:
    p[3] := x13*x19+x14*x19+x12*x17+x14*x18+x11*x16+x13*x18+x11*x17+x12*x16:
    p[4] := x09*x19+x10*x18+x08*x17+x08*x18+x07*x17+x09*x16+x10*x16+x07*x19:
    p[5] := x13*x20+x14*x20+x11*x21+x12*x21:
    p[6] := x17*x21+x16*x21+x19*x20+x18*x20:
    p[7] := x11*x20+x14*x21+x13*x21+x12*x20:
    p[8] := x14*x16+x12*x18+x13*x17+x11*x19:
    p[9] := x15*x20+x15*x21:
    p[10] := x10*x20+x08*x20+x09*x21+x08*x21+x07*x20+x07*x21+x10*x21+x09*x20:
    p[11] := x15*x17+x15*x18+x15*x16+x15*x19:
    p[12] := x08*x16+x07*x16+x09*x17+x10*x19+x07*x18+x08*x19+x10*x17+x09*x18:
    p[13] := x20*x21:


energy := 0;
for k from 1 by 1 to 13 do
    energy := energy + a[k]*p[k]:
od:

args := [x01, x02, x03, x04, x05, x06, x07, x08, x09, x10,
         x11, x12, x13, x14, x15, x16, x17, x18, x19, x20,
         x21]:

energy := convert(energy, 'horner', args):

energy_proc := codegen[makeproc](energy, parameters = args):
codegen[cost](energy_proc);

xxx := codegen[GRADIENT](energy_proc, args, function_value = true):
codegen[cost](xxx);
xxx := codegen[optimize](xxx):
codegen[cost](xxx);

xxx := codegen[packargs](xxx, args, x):
xxx := codegen[optimize](xxx):

codegen[C](xxx, optimized, filename="poly-grd.c"):