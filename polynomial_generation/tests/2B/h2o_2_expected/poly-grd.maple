    p[1] := x13+x15+x12+x14:
    p[2] := x11+x08+x10+x09:
    p[3] := x07:

    p[4] := x06*x12+x03*x12+x03*x15+x03*x13+x06*x15+x06*x13+x03*x14+x06*x14:
    p[5] := x07*x08+x07*x11+x07*x10+x07*x09:
    p[6] := x05*x11+x04*x11+x04*x10+x01*x09+x01*x08+x02*x09+x02*x08+x05*x10:
    p[7] := x05*x14+x04*x15+x01*x14+x01*x15+x05*x12+x02*x12+x02*x13+x04*x13:
    p[8] := x06*x11+x03*x08+x06*x10+x03*x09:
    p[9] := x03*x07+x06*x07:
    p[10] := x09*x10+x08*x10+x09*x11+x08*x11:
    p[11] := x07*x12+x07*x13+x07*x14+x07*x15:
    p[12] := x08*x09+x10*x11:
    p[13] := x11*x12+x09*x14+x10*x15+x08*x13+x11*x13+x10*x14+x09*x12+x08*x15:
    p[14] := x13*x15+x12*x13+x12*x14+x14*x15:
    p[15] := x05*x07+x01*x07+x02*x07+x04*x07:
    p[16] := x08*x08+x10*x10+x09*x09+x11*x11:
    p[17] := x11*x14+x10*x12+x09*x13+x08*x12+x10*x13+x08*x14+x09*x15+x11*x15:
    p[18] := x01*x10+x02*x11+x04*x08+x05*x09:
    p[19] := x03*x11+x06*x09+x03*x10+x06*x08:
    p[20] := x13*x14+x12*x15:
    p[21] := x02*x14+x04*x14+x02*x15+x05*x13+x01*x13+x01*x12+x04*x12+x05*x15:
    p[22] := x04*x09+x02*x10+x05*x08+x01*x11:
    p[23] := x13*x13+x14*x14+x15*x15+x12*x12:
    p[24] := x07*x07:


energy := 0;
for k from 1 by 1 to 24 do
    energy := energy + a[k]*p[k]:
od:

args := [x01, x02, x03, x04, x05, x06, x07, x08, x09, x10,
         x11, x12, x13, x14, x15]:

energy := convert(energy, 'horner', args):

energy_proc := codegen[makeproc](energy, parameters = args):
codegen[cost](energy_proc);

xxx := codegen[GRADIENT](energy_proc, args, function_value = true):
codegen[cost](xxx);
xxx := codegen[optimize](xxx):
codegen[cost](xxx);

xxx := codegen[packargs](xxx, args, x):
xxx := codegen[optimize](xxx):

codegen[C](xxx, optimized, filename="poly-grd.c"):